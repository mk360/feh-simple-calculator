{"version":3,"sources":["side.jsx","calc.js","resultbox.jsx","App.js","serviceWorker.js","index.js"],"names":["Side","stat","react_default","a","createElement","type","onChange","this","props","updateStat","maxLength","name","className","min","value","data","stats","id","side","style","color","word","toUpperCase","substring","length","textAlign","verticalAlign","colspan","createStatInput","updateWeapon","disabled","lockColor","updateColor","updateMovement","updateEffectiveness","Component","getTotalDamage","state","attacker","defender","others","Object","objectWithoutProperties","weapon","includes","number","_decideStats","atk","def","res","decideStats","_decideStats2","slicedToArray","attackerStat","defenderStat","advantage","effectivenessTriangle","red","green","blue","getColorAdvantage","effectiveness","effective","totalDamage","Math","floor","max","ResultBox","children","format","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","createNewSide","src_side","calculateDamage","damage","percentage","trunc","hp","setState","produceResult","Boolean","e","target","currentSide","objectSpread","defineProperty","_this$setState2","whichEffectiveness","effectivenessTemplate","concat","otherEffectiveness","currentState","sidee","movement","sideStats","forcedColor","axe","sword","lance","spd","effectiveAgainstMovement","effectiveAgainstWeapon","Fragment","resultbox","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e8486941.chunk.js","sourcesContent":["import React, {Component} from \"react\"\r\n\r\nclass Side extends Component {\r\n\r\n\tcreateStatInput(stat) {\r\n\t\treturn <input type=\"number\" onChange={this.props.updateStat} maxLength=\"2\" name={stat} className=\"stat\" min={1} value={this.props.data.stats[stat]} />\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"side\" id={this.props.side}>\r\n\t\t\t\t<h3 style={{color: this.props.side === \"attacker\" ? \"blue\" : \"red\"}}>{format(this.props.side)}</h3>\r\n\t\t\t\t<div className=\"stats\">\r\n\t\t\t\t\t<table>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<tr><td style={{textAlign: \"center\", verticalAlign: \"middle\", colspan: 2}}>HP {this.createStatInput(\"hp\")}</td></tr>\r\n\t\t\t\t\t\t\t<tr><td>Atk {this.createStatInput(\"atk\")}</td><td>Spd {this.createStatInput(\"spd\")}</td></tr>\r\n\t\t\t\t\t\t\t<tr><td>Def {this.createStatInput(\"def\")}</td><td>Res {this.createStatInput(\"res\")}</td></tr>\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"weapon\">\r\n\t\t\t\t\t<div className=\"essentials\">\r\n\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\tWeapon Type <select id=\"weaponType\" onChange={this.props.updateWeapon}>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\"></option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"sword\">Sword</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"lance\">Lance</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"axe\">Axe</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"tome\">Tome</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"dragonstone\">Dragonstone</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"bow\">Bow</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"dagger\">Dagger</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"beast\">Laguz / Beast</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\tColor <select id=\"weaponColor\" disabled={this.props.data.lockColor} onChange={this.props.updateColor}>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"colorless\">Colorless</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"red\">Red</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"blue\">Blue</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"green\">Green</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"movement\">\r\n\t\t\t\t\t\tMovement Type <select id=\"movement\" onChange={this.props.updateMovement}>\r\n\t\t\t\t\t\t\t\t\t<option value=\"infantry\">Infantry</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"flyer\">Flyer</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"cavalry\">Cavalry</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"armored\">Armored</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"effectiveness\">\r\n\t\t\t\t\t\tEffective against opponent's movement <input type=\"checkbox\" name=\"movement\" disabled={this.props.side === \"defender\"} onChange={this.props.updateEffectiveness} /> <br />\r\n\t\t\t\t\t\tEffective against opponent's weapon <input type=\"checkbox\" name=\"weapon\" disabled={this.props.side === \"defender\"} onChange={this.props.updateEffectiveness} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nfunction format(word) {\r\n  return word[0].toUpperCase() + word.substring(1, word.length)\r\n}\r\n\r\nexport default Side\r\n","function getTotalDamage(state) {\r\n\tlet {attacker, defender, ...others} = state\r\n\tif ([attacker.weapon, defender.weapon].includes(\"\")) {\r\n\t\treturn 0\r\n\t}\r\n\tlet [attackerStat, defenderStat] = decideStats(attacker, defender)\r\n\tlet advantage = getColorAdvantage(attacker, defender)\r\n\tlet effectiveness = getEffectiveness(others.effective)\r\n\tlet totalDamage = Math.floor(attackerStat * effectiveness) + Math.floor(Math.floor(attackerStat * effectiveness) * advantage) - defenderStat\r\n\treturn positive(totalDamage)\r\n}\r\n\r\nfunction decideStats(attacker, defender) {\r\n\tif ([\"bow\", \"axe\", \"lance\", \"sword\", \"dagger\"].includes(attacker.weapon)) return [attacker.stats.atk, defender.stats.def]\r\n\treturn [attacker.stats.atk, defender.stats.res]\r\n}\r\n\r\nfunction getEffectiveness(effective) {\r\n\tif (effective) return 1.5\r\n\treturn 1\r\n}\r\n\r\nfunction getColorAdvantage(attacker, defender) {\r\n\tlet effectivenessTriangle = {\r\n\t\t\"red\": \"green\",\r\n\t\t\"green\": \"blue\",\r\n\t\t\"blue\": \"red\"\r\n\t}\r\n\tif (effectivenessTriangle[attacker.color] === defender.color) return 0.2\r\n\tif (effectivenessTriangle[defender.color] === attacker.color) return -0.2\r\n\treturn 0\r\n}\r\n\r\nfunction positive(number) {\r\n\treturn Math.max(0, number)\r\n}\r\n\r\nexport default getTotalDamage\r\n","import React, {Component} from \"react\"\r\nclass ResultBox extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"result\">\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ResultBox\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Side from \"./side.jsx\"\nimport calculateDamage from \"./calc.js\"\nimport ResultBox from \"./resultbox.jsx\"\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      attacker: {\n        movement: \"\",\n        weapon: \"\",\n        color: \"\",\n        stats: {\n          hp: 1,\n          atk: 1,\n          spd: 1,\n          def: 1,\n          res: 1\n        },\n        lockColor: false\n      },\n      produceResult: false,\n      damage: 0,\n      percentage: 0,\n      defender: {\n        movement: \"\",\n        weapon: \"\",\n        color: \"\",\n        stats: {\n          hp: 1,\n          atk: 1,\n          spd: 1,\n          def: 1,\n          res: 1\n        },\n        lockColor: false\n      },\n      effectiveAgainstMovement: false,\n      effectiveAgainstWeapon: false,\n      effective: false\n    }\n  }\n\n  createNewSide = side => {\n    return <Side side={side}\n      updateEffectiveness={this.updateEffectiveness(side)}\n      updateColor={this.updateColor(side)}\n      updateWeapon={this.updateWeapon(side)}\n      updateMovement={this.updateMovement(side)}\n      updateStat={this.updateStat(side)}\n      data={this.state[side]}\n      />\n  }\n\n  calculateDamage = () => {\n    let damage = calculateDamage(this.state) || 0\n    let percentage = Math.min(Math.trunc(damage / this.state.defender.stats.hp * 100), 100)\n    this.setState({\n      produceResult: Boolean(damage),\n      damage,\n      percentage\n    })\n  }\n\n  updateColor = side => {\n    return e => {\n      let color = e.target.value\n      let currentSide = {...this.state[side]}\n      currentSide.color = color\n      this.setState({\n        [side]: currentSide,\n      }, () => {\n        this.calculateDamage()\n      })\n    }\n  }\n\n  updateEffectiveness = side => {\n    if (side === \"attacker\") {\n      return e => {\n        let whichEffectiveness = format(e.target.name)\n        let effectivenessTemplate = `effectiveAgainst${whichEffectiveness}`\n        let otherEffectiveness = \"Weapon\" !== whichEffectiveness ? \"Weapon\" : \"Movement\"\n        let currentState = this.state[effectivenessTemplate]\n        this.setState({\n          [effectivenessTemplate]: !currentState,\n          effective: !currentState || this.state[`effectiveAgainst${format(otherEffectiveness)}`]\n        }, () => {\n          this.calculateDamage()\n        })\n      }\n    }\n    return () => {}\n  }\n\n  updateMovement = side => {\n    return e => {\n      let value = e.target.value\n      let sidee = {...this.state[side]}\n      sidee.movement = value\n      this.setState({\n        [side]: sidee\n      }, () => {\n        this.calculateDamage()\n      })\n    }\n  }\n\n  updateStat = side => { // arrow functions are used to keep the original reference of \"this\" as the App class\n    return e => {\n      let value = e.target.value\n      let sideStats = {...this.state[side]}\n      let stat = e.target.name\n      sideStats.stats[stat] = +value\n      this.setState({\n        [side]: sideStats\n      }, () => {\n        this.calculateDamage()\n      })\n    }\n  }\n\n  updateWeapon = side => {\n    return e => {\n      let value = e.target.value\n      let sidee = {...this.state[side]}\n      sidee.weapon = value\n      let lockColor = [\"axe\", \"sword\", \"lance\"].includes(sidee.weapon)\n      if (lockColor) {\n        let forcedColor = {\n          \"axe\": \"green\",\n          \"sword\": \"red\",\n          \"lance\": \"blue\"\n        }[sidee.weapon]\n        sidee.color = forcedColor\n      }\n\n      sidee.lockColor = lockColor\n\n      this.setState({\n        [side]: sidee\n      }, () => {\n        this.calculateDamage()\n      })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"App\">\n          <h2>Fire Emblem Heroes Simple Damage Calculator</h2>\n          <div className=\"attacker\">\n            {this.createNewSide(\"attacker\")}\n          </div>\n          <ResultBox>\n            {this.state.produceResult ? `The attacker's settings yield a damage amount of ${this.state.damage} HP lost (${this.state.percentage}%).` : \"The attacker's settings do not yield any damage on the defender.\"}\n          </ResultBox>\n          <div className=\"defender\">\n            {this.createNewSide(\"defender\")}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction format(word) {\n  return word[0].toUpperCase() + word.substring(1, word.length)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}